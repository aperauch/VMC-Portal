/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import '@cds/core/checkbox/register.js';
import { CdsCheckboxDirective } from './cds-checkbox.directive';
import { CdsCheckboxGroupDirective } from './cds-checkbox-group.directive';
import * as i0 from "@angular/core";
export class CdsCheckboxModule {
}
CdsCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CdsCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsCheckboxModule, declarations: [CdsCheckboxDirective,
        CdsCheckboxGroupDirective], imports: [CommonModule], exports: [CdsCheckboxDirective,
        CdsCheckboxGroupDirective] });
CdsCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsCheckboxModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsCheckboxModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        CdsCheckboxDirective,
                        CdsCheckboxGroupDirective,
                    ],
                    exports: [
                        CdsCheckboxDirective,
                        CdsCheckboxGroupDirective,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvY2hlY2tib3gvY2hlY2tib3gubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLGdDQUFnQyxDQUFDO0FBRXhDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOztBQWEzRSxNQUFNLE9BQU8saUJBQWlCOzs4R0FBakIsaUJBQWlCOytHQUFqQixpQkFBaUIsaUJBUjFCLG9CQUFvQjtRQUNwQix5QkFBeUIsYUFIakIsWUFBWSxhQU1wQixvQkFBb0I7UUFDcEIseUJBQXlCOytHQUdoQixpQkFBaUIsWUFWbkIsQ0FBQyxZQUFZLENBQUM7MkZBVVosaUJBQWlCO2tCQVg3QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDdkIsWUFBWSxFQUFFO3dCQUNaLG9CQUFvQjt3QkFDcEIseUJBQXlCO3FCQUMxQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1Asb0JBQW9CO3dCQUNwQix5QkFBeUI7cUJBQzFCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIyIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAnQGNkcy9jb3JlL2NoZWNrYm94L3JlZ2lzdGVyLmpzJztcblxuaW1wb3J0IHsgQ2RzQ2hlY2tib3hEaXJlY3RpdmUgfSBmcm9tICcuL2Nkcy1jaGVja2JveC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ2RzQ2hlY2tib3hHcm91cERpcmVjdGl2ZSB9IGZyb20gJy4vY2RzLWNoZWNrYm94LWdyb3VwLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBDZHNDaGVja2JveERpcmVjdGl2ZSxcbiAgICBDZHNDaGVja2JveEdyb3VwRGlyZWN0aXZlLFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgQ2RzQ2hlY2tib3hEaXJlY3RpdmUsXG4gICAgQ2RzQ2hlY2tib3hHcm91cERpcmVjdGl2ZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2RzQ2hlY2tib3hNb2R1bGUge31cbiJdfQ==