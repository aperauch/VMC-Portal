/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsCheckboxGroupDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
    get layout() {
        return this.element.layout;
    }
    set layout(value) {
        this.element.layout = value;
    }
    ;
    get controlAlign() {
        return this.element.controlAlign;
    }
    set controlAlign(value) {
        this.element.controlAlign = value;
    }
    ;
    get disabled() {
        return this.element.disabled;
    }
    set disabled(value) {
        this.element.disabled = value === '' ? true : value;
    }
    ;
    get controlWidth() {
        return this.element.controlWidth;
    }
    set controlWidth(value) {
        this.element.controlWidth = value;
    }
    ;
    get responsive() {
        return this.element.responsive;
    }
    set responsive(value) {
        this.element.responsive = value === '' ? true : value;
    }
    ;
}
CdsCheckboxGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsCheckboxGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsCheckboxGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsCheckboxGroupDirective, selector: "cds-checkbox-group", inputs: { status: "status", layout: "layout", controlAlign: "controlAlign", disabled: "disabled", controlWidth: "controlWidth", responsive: "responsive" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsCheckboxGroupDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-checkbox-group' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{
                type: Input
            }], layout: [{
                type: Input
            }], controlAlign: [{
                type: Input
            }], disabled: [{
                type: Input
            }], controlWidth: [{
                type: Input
            }], responsive: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWNoZWNrYm94LWdyb3VwLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkcy1hbmd1bGFyL2NoZWNrYm94L2Nkcy1jaGVja2JveC1ncm91cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sZUFBZSxDQUFDOztBQUloRSxNQUFNLE9BQU8seUJBQXlCO0lBeUNwQyxZQUFZLFVBQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBeENELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDN0IsQ0FBQztJQUNELElBQWEsTUFBTSxDQUFDLEtBQUs7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQzlCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBSztRQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFLO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQWEsUUFBUSxDQUFDLEtBQW1CO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztJQUNuQyxDQUFDO0lBQ0QsSUFBYSxZQUFZLENBQUMsS0FBSztRQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7SUFDcEMsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFhLFVBQVUsQ0FBQyxLQUFtQjtRQUN6QyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUN4RCxDQUFDO0lBQUEsQ0FBQzs7c0hBdENTLHlCQUF5QjswR0FBekIseUJBQXlCOzJGQUF6Qix5QkFBeUI7a0JBRHJDLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUsb0JBQW9CLEVBQUU7aUdBTzlCLE1BQU07c0JBQWxCLEtBQUs7Z0JBTU8sTUFBTTtzQkFBbEIsS0FBSztnQkFNTyxZQUFZO3NCQUF4QixLQUFLO2dCQU1PLFFBQVE7c0JBQXBCLEtBQUs7Z0JBTU8sWUFBWTtzQkFBeEIsS0FBSztnQkFNTyxVQUFVO3NCQUF0QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIyIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgLCBJbnB1dCAgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZHNDaGVja2JveEdyb3VwIH0gZnJvbSAnQGNkcy9jb3JlL2NoZWNrYm94JztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2RzLWNoZWNrYm94LWdyb3VwJyB9KVxuZXhwb3J0IGNsYXNzIENkc0NoZWNrYm94R3JvdXBEaXJlY3RpdmUge1xuICBwcm90ZWN0ZWQgZWxlbWVudDogQ2RzQ2hlY2tib3hHcm91cDtcblxuICBnZXQgc3RhdHVzKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc3RhdHVzO1xuICB9XG4gIEBJbnB1dCgpIHNldCBzdGF0dXModmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQuc3RhdHVzID0gdmFsdWU7XG4gIH07XG4gIGdldCBsYXlvdXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5sYXlvdXQ7XG4gIH1cbiAgQElucHV0KCkgc2V0IGxheW91dCh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5sYXlvdXQgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGNvbnRyb2xBbGlnbigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNvbnRyb2xBbGlnbjtcbiAgfVxuICBASW5wdXQoKSBzZXQgY29udHJvbEFsaWduKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmNvbnRyb2xBbGlnbiA9IHZhbHVlO1xuICB9O1xuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5kaXNhYmxlZDtcbiAgfVxuICBASW5wdXQoKSBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5kaXNhYmxlZCA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGNvbnRyb2xXaWR0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNvbnRyb2xXaWR0aDtcbiAgfVxuICBASW5wdXQoKSBzZXQgY29udHJvbFdpZHRoKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmNvbnRyb2xXaWR0aCA9IHZhbHVlO1xuICB9O1xuICBnZXQgcmVzcG9uc2l2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnJlc3BvbnNpdmU7XG4gIH1cbiAgQElucHV0KCkgc2V0IHJlc3BvbnNpdmUodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5yZXNwb25zaXZlID0gdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICB9O1xuXG5cbiAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgfVxufVxuIl19