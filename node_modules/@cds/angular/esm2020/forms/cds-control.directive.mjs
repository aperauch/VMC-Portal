/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsControlDirective {
    constructor(elementRef) {
        this.layoutChange = new EventEmitter();
        this.element = elementRef.nativeElement;
    }
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
    get controlWidth() {
        return this.element.controlWidth;
    }
    set controlWidth(value) {
        this.element.controlWidth = value;
    }
    ;
    get validate() {
        return this.element.validate;
    }
    set validate(value) {
        this.element.validate = value === '' ? true : value;
    }
    ;
    get responsive() {
        return this.element.responsive;
    }
    set responsive(value) {
        this.element.responsive = value === '' ? true : value;
    }
    ;
    get layout() {
        return this.element.layout;
    }
    set layout(value) {
        this.element.layout = value;
    }
    ;
}
CdsControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsControlDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsControlDirective, selector: "cds-control", inputs: { status: "status", controlWidth: "controlWidth", validate: "validate", responsive: "responsive", layout: "layout" }, outputs: { layoutChange: "layoutChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsControlDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-control' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{
                type: Input
            }], controlWidth: [{
                type: Input
            }], validate: [{
                type: Input
            }], responsive: [{
                type: Input
            }], layout: [{
                type: Input
            }], layoutChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWNvbnRyb2wuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvZm9ybXMvY2RzLWNvbnRyb2wuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFlLEtBQUssRUFBSSxNQUFNLEVBQUUsWUFBWSxFQUFHLE1BQU0sZUFBZSxDQUFDOztBQUl2RixNQUFNLE9BQU8sbUJBQW1CO0lBb0M5QixZQUFZLFVBQXNCO1FBRnhCLGlCQUFZLEdBQThCLElBQUksWUFBWSxFQUFFLENBQUM7UUFHckUsSUFBSSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDO0lBQzFDLENBQUM7SUFuQ0QsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBSztRQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFLO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQWEsUUFBUSxDQUFDLEtBQW1CO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztJQUNqQyxDQUFDO0lBQ0QsSUFBYSxVQUFVLENBQUMsS0FBbUI7UUFDekMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDeEQsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQzdCLENBQUM7SUFDRCxJQUFhLE1BQU0sQ0FBQyxLQUFLO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQzs7Z0hBaENTLG1CQUFtQjtvR0FBbkIsbUJBQW1COzJGQUFuQixtQkFBbUI7a0JBRC9CLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFO2lHQU92QixNQUFNO3NCQUFsQixLQUFLO2dCQU1PLFlBQVk7c0JBQXhCLEtBQUs7Z0JBTU8sUUFBUTtzQkFBcEIsS0FBSztnQkFNTyxVQUFVO3NCQUF0QixLQUFLO2dCQU1PLE1BQU07c0JBQWxCLEtBQUs7Z0JBSUksWUFBWTtzQkFBckIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMiBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmICwgSW5wdXQgICwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZHNDb250cm9sIH0gZnJvbSAnQGNkcy9jb3JlL2Zvcm1zJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2RzLWNvbnRyb2wnIH0pXG5leHBvcnQgY2xhc3MgQ2RzQ29udHJvbERpcmVjdGl2ZSB7XG4gIHByb3RlY3RlZCBlbGVtZW50OiBDZHNDb250cm9sO1xuXG4gIGdldCBzdGF0dXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdGF0dXM7XG4gIH1cbiAgQElucHV0KCkgc2V0IHN0YXR1cyh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5zdGF0dXMgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGNvbnRyb2xXaWR0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNvbnRyb2xXaWR0aDtcbiAgfVxuICBASW5wdXQoKSBzZXQgY29udHJvbFdpZHRoKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmNvbnRyb2xXaWR0aCA9IHZhbHVlO1xuICB9O1xuICBnZXQgdmFsaWRhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC52YWxpZGF0ZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgdmFsaWRhdGUodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC52YWxpZGF0ZSA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHJlc3BvbnNpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5yZXNwb25zaXZlO1xuICB9XG4gIEBJbnB1dCgpIHNldCByZXNwb25zaXZlKHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmVsZW1lbnQucmVzcG9uc2l2ZSA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGxheW91dCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmxheW91dDtcbiAgfVxuICBASW5wdXQoKSBzZXQgbGF5b3V0KHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmxheW91dCA9IHZhbHVlO1xuICB9O1xuXG4gIEBPdXRwdXQoKSBsYXlvdXRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxDdXN0b21FdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgfVxufVxuIl19