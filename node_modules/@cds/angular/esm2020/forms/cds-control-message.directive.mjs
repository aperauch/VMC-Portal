/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsControlMessageDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
    get error() {
        return this.element.error;
    }
    set error(value) {
        this.element.error = value;
    }
    ;
}
CdsControlMessageDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsControlMessageDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsControlMessageDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsControlMessageDirective, selector: "cds-control-message", inputs: { status: "status", error: "error" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsControlMessageDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-control-message' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{
                type: Input
            }], error: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWNvbnRyb2wtbWVzc2FnZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jZHMtYW5ndWxhci9mb3Jtcy9jZHMtY29udHJvbC1tZXNzYWdlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBZSxLQUFLLEVBQUksTUFBTSxlQUFlLENBQUM7O0FBSWhFLE1BQU0sT0FBTywwQkFBMEI7SUFpQnJDLFlBQVksVUFBc0I7UUFDaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDO0lBQzFDLENBQUM7SUFoQkQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBSztRQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFhLEtBQUssQ0FBQyxLQUFLO1FBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBQUEsQ0FBQzs7dUhBZFMsMEJBQTBCOzJHQUExQiwwQkFBMEI7MkZBQTFCLDBCQUEwQjtrQkFEdEMsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxxQkFBcUIsRUFBRTtpR0FPL0IsTUFBTTtzQkFBbEIsS0FBSztnQkFNTyxLQUFLO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIyIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgLCBJbnB1dCAgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZHNDb250cm9sTWVzc2FnZSB9IGZyb20gJ0BjZHMvY29yZS9mb3Jtcyc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ2Nkcy1jb250cm9sLW1lc3NhZ2UnIH0pXG5leHBvcnQgY2xhc3MgQ2RzQ29udHJvbE1lc3NhZ2VEaXJlY3RpdmUge1xuICBwcm90ZWN0ZWQgZWxlbWVudDogQ2RzQ29udHJvbE1lc3NhZ2U7XG5cbiAgZ2V0IHN0YXR1cygpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0YXR1cztcbiAgfVxuICBASW5wdXQoKSBzZXQgc3RhdHVzKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnN0YXR1cyA9IHZhbHVlO1xuICB9O1xuICBnZXQgZXJyb3IoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5lcnJvcjtcbiAgfVxuICBASW5wdXQoKSBzZXQgZXJyb3IodmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQuZXJyb3IgPSB2YWx1ZTtcbiAgfTtcblxuXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gIH1cbn1cbiJdfQ==