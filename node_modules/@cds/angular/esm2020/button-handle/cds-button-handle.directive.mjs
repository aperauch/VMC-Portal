/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsButtonHandleDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get shape() {
        return this.element.shape;
    }
    set shape(value) {
        this.element.shape = value;
    }
    ;
    get action() {
        return this.element.action;
    }
    set action(value) {
        this.element.action = value;
    }
    ;
    get iconSize() {
        return this.element.iconSize;
    }
    set iconSize(value) {
        this.element.iconSize = value;
    }
    ;
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
    get pressed() {
        return this.element.pressed;
    }
    set pressed(value) {
        this.element.pressed = value === '' ? true : value;
    }
    ;
    get expanded() {
        return this.element.expanded;
    }
    set expanded(value) {
        this.element.expanded = value === '' ? true : value;
    }
    ;
    get readonly() {
        return this.element.readonly;
    }
    set readonly(value) {
        this.element.readonly = value === '' ? true : value;
    }
    ;
    get type() {
        return this.element.type;
    }
    set type(value) {
        this.element.type = value;
    }
    ;
    get name() {
        return this.element.name;
    }
    set name(value) {
        this.element.name = value;
    }
    ;
    get value() {
        return this.element.value;
    }
    set value(value) {
        this.element.value = value;
    }
    ;
    get disabled() {
        return this.element.disabled;
    }
    set disabled(value) {
        this.element.disabled = value === '' ? true : value;
    }
    ;
    get popup() {
        return this.element.popup;
    }
    set popup(value) {
        this.element.popup = value;
    }
    ;
}
CdsButtonHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonHandleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsButtonHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsButtonHandleDirective, selector: "cds-button-handle", inputs: { shape: "shape", action: "action", iconSize: "iconSize", i18n: "i18n", pressed: "pressed", expanded: "expanded", readonly: "readonly", type: "type", name: "name", value: "value", disabled: "disabled", popup: "popup" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonHandleDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-button-handle' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { shape: [{
                type: Input
            }], action: [{
                type: Input
            }], iconSize: [{
                type: Input
            }], i18n: [{
                type: Input
            }], pressed: [{
                type: Input
            }], expanded: [{
                type: Input
            }], readonly: [{
                type: Input
            }], type: [{
                type: Input
            }], name: [{
                type: Input
            }], value: [{
                type: Input
            }], disabled: [{
                type: Input
            }], popup: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWJ1dHRvbi1oYW5kbGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvYnV0dG9uLWhhbmRsZS9jZHMtYnV0dG9uLWhhbmRsZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sZUFBZSxDQUFDOztBQUloRSxNQUFNLE9BQU8sd0JBQXdCO0lBNkVuQyxZQUFZLFVBQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBNUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUNELElBQWEsS0FBSyxDQUFDLEtBQUs7UUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBSztRQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO0lBQy9CLENBQUM7SUFDRCxJQUFhLFFBQVEsQ0FBQyxLQUFLO1FBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUNELElBQWEsSUFB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TU8sSUFBSTtzQkFBaEIsS0FBSztnQkFNTyxJQUFJO3NCQUFoQixLQUFLO2dCQU1PLEtBQUs7c0JBQWpCLEtBQUs7Z0JBTU8sUUFBUTtzQkFBcEIsS0FBSztnQkFNTyxLQUFLO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIyIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgLCBJbnB1dCAgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZHNCdXR0b25IYW5kbGUgfSBmcm9tICdAY2RzL2NvcmUvYnV0dG9uLWhhbmRsZSc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ2Nkcy1idXR0b24taGFuZGxlJyB9KVxuZXhwb3J0IGNsYXNzIENkc0J1dHRvbkhhbmRsZURpcmVjdGl2ZSB7XG4gIHByb3RlY3RlZCBlbGVtZW50OiBDZHNCdXR0b25IYW5kbGU7XG5cbiAgZ2V0IHNoYXBlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2hhcGU7XG4gIH1cbiAgQElucHV0KCkgc2V0IHNoYXBlKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnNoYXBlID0gdmFsdWU7XG4gIH07XG4gIGdldCBhY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5hY3Rpb247XG4gIH1cbiAgQElucHV0KCkgc2V0IGFjdGlvbih2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5hY3Rpb24gPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGljb25TaXplKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuaWNvblNpemU7XG4gIH1cbiAgQElucHV0KCkgc2V0IGljb25TaXplKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50Lmljb25TaXplID0gdmFsdWU7XG4gIH07XG4gIGdldCBpMThuKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuaTE4bjtcbiAgfVxuICBASW5wdXQoKSBzZXQgaTE4bih2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5pMThuID0gdmFsdWU7XG4gIH07XG4gIGdldCBwcmVzc2VkKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQucHJlc3NlZDtcbiAgfVxuICBASW5wdXQoKSBzZXQgcHJlc3NlZCh2YWx1ZTogYm9vbGVhbiB8ICcnKSB7XG4gICAgdGhpcy5lbGVtZW50LnByZXNzZWQgPSB2YWx1ZSA9PT0gJycgPyB0cnVlIDogdmFsdWU7XG4gIH07XG4gIGdldCBleHBhbmRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmV4cGFuZGVkO1xuICB9XG4gIEBJbnB1dCgpIHNldCBleHBhbmRlZCh2YWx1ZTogYm9vbGVhbiB8ICcnKSB7XG4gICAgdGhpcy5lbGVtZW50LmV4cGFuZGVkID0gdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICB9O1xuICBnZXQgcmVhZG9ubHkoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5yZWFkb25seTtcbiAgfVxuICBASW5wdXQoKSBzZXQgcmVhZG9ubHkodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5yZWFkb25seSA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC50eXBlO1xuICB9XG4gIEBJbnB1dCgpIHNldCB0eXBlKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnR5cGUgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5uYW1lO1xuICB9XG4gIEBJbnB1dCgpIHNldCBuYW1lKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50Lm5hbWUgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQudmFsdWU7XG4gIH1cbiAgQElucHV0KCkgc2V0IHZhbHVlKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnZhbHVlID0gdmFsdWU7XG4gIH07XG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmRpc2FibGVkO1xuICB9XG4gIEBJbnB1dCgpIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbiB8ICcnKSB7XG4gICAgdGhpcy5lbGVtZW50LmRpc2FibGVkID0gdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICB9O1xuICBnZXQgcG9wdXAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5wb3B1cDtcbiAgfVxuICBASW5wdXQoKSBzZXQgcG9wdXAodmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQucG9wdXAgPSB2YWx1ZTtcbiAgfTtcblxuXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gIH1cbn1cbiJdfQ==