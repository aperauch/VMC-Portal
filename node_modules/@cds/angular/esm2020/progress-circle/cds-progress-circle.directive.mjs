/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsProgressCircleDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
    get inverse() {
        return this.element.inverse;
    }
    set inverse(value) {
        this.element.inverse = value === '' ? true : value;
    }
    ;
    get value() {
        return this.element.value;
    }
    set value(value) {
        this.element.value = value;
    }
    ;
    get line() {
        return this.element.line;
    }
    set line(value) {
        this.element.line = value;
    }
    ;
    get size() {
        return this.element.size;
    }
    set size(value) {
        this.element.size = value;
    }
    ;
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
}
CdsProgressCircleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsProgressCircleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsProgressCircleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsProgressCircleDirective, selector: "cds-progress-circle", inputs: { status: "status", inverse: "inverse", value: "value", line: "line", size: "size", i18n: "i18n" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsProgressCircleDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-progress-circle' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{
                type: Input
            }], inverse: [{
                type: Input
            }], value: [{
                type: Input
            }], line: [{
                type: Input
            }], size: [{
                type: Input
            }], i18n: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLXByb2dyZXNzLWNpcmNsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jZHMtYW5ndWxhci9wcm9ncmVzcy1jaXJjbGUvY2RzLXByb2dyZXNzLWNpcmNsZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sZUFBZSxDQUFDOztBQUloRSxNQUFNLE9BQU8sMEJBQTBCO0lBeUNyQyxZQUFZLFVBQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBeENELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDN0IsQ0FBQztJQUNELElBQWEsTUFBTSxDQUFDLEtBQUs7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQzlCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUM5QixDQUFDO0lBQ0QsSUFBYSxPQUFPLENBQUMsS0FBbUI7UUFDdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDckQsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFhLEtBQUssQ0FBQyxLQUFLO1FBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUNELElBQWEsSUFBSSxDQUFDLEtBQUs7UUFDckIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBSztRQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFDRCxJQUFhLElBQUksQ0FBQyxLQUFLO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBQUEsQ0FBQzs7dUhBdENTLDBCQUEwQjsyR0FBMUIsMEJBQTBCOzJGQUExQiwwQkFBMEI7a0JBRHRDLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUscUJBQXFCLEVBQUU7aUdBTy9CLE1BQU07c0JBQWxCLEtBQUs7Z0JBTU8sT0FBTztzQkFBbkIsS0FBSztnQkFNTyxLQUFLO3NCQUFqQixLQUFLO2dCQU1PLElBQUk7c0JBQWhCLEtBQUs7Z0JBTU8sSUFBSTtzQkFBaEIsS0FBSztnQkFNTyxJQUFJO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIyIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgLCBJbnB1dCAgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZHNQcm9ncmVzc0NpcmNsZSB9IGZyb20gJ0BjZHMvY29yZS9wcm9ncmVzcy1jaXJjbGUnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjZHMtcHJvZ3Jlc3MtY2lyY2xlJyB9KVxuZXhwb3J0IGNsYXNzIENkc1Byb2dyZXNzQ2lyY2xlRGlyZWN0aXZlIHtcbiAgcHJvdGVjdGVkIGVsZW1lbnQ6IENkc1Byb2dyZXNzQ2lyY2xlO1xuXG4gIGdldCBzdGF0dXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdGF0dXM7XG4gIH1cbiAgQElucHV0KCkgc2V0IHN0YXR1cyh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5zdGF0dXMgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGludmVyc2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5pbnZlcnNlO1xuICB9XG4gIEBJbnB1dCgpIHNldCBpbnZlcnNlKHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmVsZW1lbnQuaW52ZXJzZSA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQudmFsdWU7XG4gIH1cbiAgQElucHV0KCkgc2V0IHZhbHVlKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnZhbHVlID0gdmFsdWU7XG4gIH07XG4gIGdldCBsaW5lKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQubGluZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgbGluZSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5saW5lID0gdmFsdWU7XG4gIH07XG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2l6ZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgc2l6ZSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5zaXplID0gdmFsdWU7XG4gIH07XG4gIGdldCBpMThuKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuaTE4bjtcbiAgfVxuICBASW5wdXQoKSBzZXQgaTE4bih2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5pMThuID0gdmFsdWU7XG4gIH07XG5cblxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICB9XG59XG4iXX0=