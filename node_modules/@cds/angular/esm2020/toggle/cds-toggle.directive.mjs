/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsToggleDirective {
    constructor(elementRef) {
        this.layoutChange = new EventEmitter();
        this.element = elementRef.nativeElement;
    }
    get cdsMotion() {
        return this.element.cdsMotion;
    }
    set cdsMotion(value) {
        this.element.cdsMotion = value;
    }
    ;
    get controlAlign() {
        return this.element.controlAlign;
    }
    set controlAlign(value) {
        this.element.controlAlign = value;
    }
    ;
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
    get controlWidth() {
        return this.element.controlWidth;
    }
    set controlWidth(value) {
        this.element.controlWidth = value;
    }
    ;
    get validate() {
        return this.element.validate;
    }
    set validate(value) {
        this.element.validate = value === '' ? true : value;
    }
    ;
    get responsive() {
        return this.element.responsive;
    }
    set responsive(value) {
        this.element.responsive = value === '' ? true : value;
    }
    ;
    get layout() {
        return this.element.layout;
    }
    set layout(value) {
        this.element.layout = value;
    }
    ;
}
CdsToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsToggleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsToggleDirective, selector: "cds-toggle", inputs: { cdsMotion: "cdsMotion", controlAlign: "controlAlign", status: "status", controlWidth: "controlWidth", validate: "validate", responsive: "responsive", layout: "layout" }, outputs: { layoutChange: "layoutChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsToggleDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-toggle' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{
                type: Input
            }], controlAlign: [{
                type: Input
            }], status: [{
                type: Input
            }], controlWidth: [{
                type: Input
            }], validate: [{
                type: Input
            }], responsive: [{
                type: Input
            }], layout: [{
                type: Input
            }], layoutChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLXRvZ2dsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jZHMtYW5ndWxhci90b2dnbGUvY2RzLXRvZ2dsZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sRUFBRSxZQUFZLEVBQUcsTUFBTSxlQUFlLENBQUM7O0FBSXZGLE1BQU0sT0FBTyxrQkFBa0I7SUFnRDdCLFlBQVksVUFBc0I7UUFGeEIsaUJBQVksR0FBOEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUdyRSxJQUFJLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxhQUFhLENBQUM7SUFDMUMsQ0FBQztJQS9DRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFDRCxJQUFhLFNBQVMsQ0FBQyxLQUFLO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQWEsWUFBWSxDQUFDLEtBQUs7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQ3BDLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBSztRQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFLO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQWEsUUFBUSxDQUFDLEtBQW1CO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztJQUNqQyxDQUFDO0lBQ0QsSUFBYSxVQUFVLENBQUMsS0FBbUI7UUFDekMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDeEQsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQzdCLENBQUM7SUFDRCxJQUFhLE1BQU0sQ0FBQyxLQUFLO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQzs7K0dBNUNTLGtCQUFrQjttR0FBbEIsa0JBQWtCOzJGQUFsQixrQkFBa0I7a0JBRDlCLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFO2lHQU90QixTQUFTO3NCQUFyQixLQUFLO2dCQU1PLFlBQVk7c0JBQXhCLEtBQUs7Z0JBTU8sTUFBTTtzQkFBbEIsS0FBSztnQkFNTyxZQUFZO3NCQUF4QixLQUFLO2dCQU1PLFFBQVE7c0JBQXBCLEtBQUs7Z0JBTU8sVUFBVTtzQkFBdEIsS0FBSztnQkFNTyxNQUFNO3NCQUFsQixLQUFLO2dCQUlJLFlBQVk7c0JBQXJCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjIgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiAsIElucHV0ICAsIE91dHB1dCwgRXZlbnRFbWl0dGVyICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2RzVG9nZ2xlIH0gZnJvbSAnQGNkcy9jb3JlL3RvZ2dsZSc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ2Nkcy10b2dnbGUnIH0pXG5leHBvcnQgY2xhc3MgQ2RzVG9nZ2xlRGlyZWN0aXZlIHtcbiAgcHJvdGVjdGVkIGVsZW1lbnQ6IENkc1RvZ2dsZTtcblxuICBnZXQgY2RzTW90aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2RzTW90aW9uO1xuICB9XG4gIEBJbnB1dCgpIHNldCBjZHNNb3Rpb24odmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQuY2RzTW90aW9uID0gdmFsdWU7XG4gIH07XG4gIGdldCBjb250cm9sQWxpZ24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5jb250cm9sQWxpZ247XG4gIH1cbiAgQElucHV0KCkgc2V0IGNvbnRyb2xBbGlnbih2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5jb250cm9sQWxpZ24gPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHN0YXR1cygpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0YXR1cztcbiAgfVxuICBASW5wdXQoKSBzZXQgc3RhdHVzKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnN0YXR1cyA9IHZhbHVlO1xuICB9O1xuICBnZXQgY29udHJvbFdpZHRoKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY29udHJvbFdpZHRoO1xuICB9XG4gIEBJbnB1dCgpIHNldCBjb250cm9sV2lkdGgodmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQuY29udHJvbFdpZHRoID0gdmFsdWU7XG4gIH07XG4gIGdldCB2YWxpZGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnZhbGlkYXRlO1xuICB9XG4gIEBJbnB1dCgpIHNldCB2YWxpZGF0ZSh2YWx1ZTogYm9vbGVhbiB8ICcnKSB7XG4gICAgdGhpcy5lbGVtZW50LnZhbGlkYXRlID0gdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICB9O1xuICBnZXQgcmVzcG9uc2l2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnJlc3BvbnNpdmU7XG4gIH1cbiAgQElucHV0KCkgc2V0IHJlc3BvbnNpdmUodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5yZXNwb25zaXZlID0gdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICB9O1xuICBnZXQgbGF5b3V0KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQubGF5b3V0O1xuICB9XG4gIEBJbnB1dCgpIHNldCBsYXlvdXQodmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQubGF5b3V0ID0gdmFsdWU7XG4gIH07XG5cbiAgQE91dHB1dCgpIGxheW91dENoYW5nZTogRXZlbnRFbWl0dGVyPEN1c3RvbUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICB9XG59XG4iXX0=