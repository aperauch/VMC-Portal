/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsInternalSplitHandleDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
    get direction() {
        return this.element.direction;
    }
    set direction(value) {
        this.element.direction = value;
    }
    ;
}
CdsInternalSplitHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsInternalSplitHandleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsInternalSplitHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsInternalSplitHandleDirective, selector: "cds-internal-split-handle", inputs: { i18n: "i18n", direction: "direction" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsInternalSplitHandleDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-internal-split-handle' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{
                type: Input
            }], direction: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWludGVybmFsLXNwbGl0LWhhbmRsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZHMtYW5ndWxhci9pbnRlcm5hbC1jb21wb25lbnRzL3NwbGl0LWhhbmRsZS9jZHMtaW50ZXJuYWwtc3BsaXQtaGFuZGxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBZSxLQUFLLEVBQUksTUFBTSxlQUFlLENBQUM7O0FBSWhFLE1BQU0sT0FBTywrQkFBK0I7SUFpQjFDLFlBQVksVUFBc0I7UUFDaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDO0lBQzFDLENBQUM7SUFoQkQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBSztRQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFDRCxJQUFhLFNBQVMsQ0FBQyxLQUFLO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBQUEsQ0FBQzs7NEhBZFMsK0JBQStCO2dIQUEvQiwrQkFBK0I7MkZBQS9CLCtCQUErQjtrQkFEM0MsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSwyQkFBMkIsRUFBRTtpR0FPckMsSUFBSTtzQkFBaEIsS0FBSztnQkFNTyxTQUFTO3NCQUFyQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIyIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgLCBJbnB1dCAgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZHNJbnRlcm5hbFNwbGl0SGFuZGxlIH0gZnJvbSAnQGNkcy9jb3JlL2ludGVybmFsLWNvbXBvbmVudHMvc3BsaXQtaGFuZGxlJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2RzLWludGVybmFsLXNwbGl0LWhhbmRsZScgfSlcbmV4cG9ydCBjbGFzcyBDZHNJbnRlcm5hbFNwbGl0SGFuZGxlRGlyZWN0aXZlIHtcbiAgcHJvdGVjdGVkIGVsZW1lbnQ6IENkc0ludGVybmFsU3BsaXRIYW5kbGU7XG5cbiAgZ2V0IGkxOG4oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5pMThuO1xuICB9XG4gIEBJbnB1dCgpIHNldCBpMThuKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmkxOG4gPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGRpcmVjdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmRpcmVjdGlvbjtcbiAgfVxuICBASW5wdXQoKSBzZXQgZGlyZWN0aW9uKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmRpcmVjdGlvbiA9IHZhbHVlO1xuICB9O1xuXG5cbiAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgfVxufVxuIl19