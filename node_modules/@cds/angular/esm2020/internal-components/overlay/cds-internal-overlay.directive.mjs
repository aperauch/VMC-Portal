/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsInternalOverlayDirective {
    constructor(elementRef) {
        this.cdsMotionChange = new EventEmitter();
        this.closeChange = new EventEmitter();
        this.element = elementRef.nativeElement;
    }
    get cdsMotion() {
        return this.element.cdsMotion;
    }
    set cdsMotion(value) {
        this.element.cdsMotion = value;
    }
    ;
    get closable() {
        return this.element.closable;
    }
    set closable(value) {
        this.element.closable = value === '' ? true : value;
    }
    ;
    get hidden() {
        return this.element.hidden;
    }
    set hidden(value) {
        this.element.hidden = value === '' ? true : value;
    }
    ;
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
    get closeOverlay() {
        return this.element.closeOverlay;
    }
    set closeOverlay(value) {
        this.element.closeOverlay = value;
    }
    ;
}
CdsInternalOverlayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsInternalOverlayDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsInternalOverlayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsInternalOverlayDirective, selector: "cds-internal-overlay", inputs: { cdsMotion: "cdsMotion", closable: "closable", hidden: "hidden", i18n: "i18n", closeOverlay: "closeOverlay" }, outputs: { cdsMotionChange: "cdsMotionChange", closeChange: "closeChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsInternalOverlayDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-internal-overlay' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{
                type: Input
            }], closable: [{
                type: Input
            }], hidden: [{
                type: Input
            }], i18n: [{
                type: Input
            }], closeOverlay: [{
                type: Input
            }], cdsMotionChange: [{
                type: Output
            }], closeChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWludGVybmFsLW92ZXJsYXkuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvaW50ZXJuYWwtY29tcG9uZW50cy9vdmVybGF5L2Nkcy1pbnRlcm5hbC1vdmVybGF5LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBZSxLQUFLLEVBQUksTUFBTSxFQUFFLFlBQVksRUFBRyxNQUFNLGVBQWUsQ0FBQzs7QUFJdkYsTUFBTSxPQUFPLDJCQUEyQjtJQXFDdEMsWUFBWSxVQUFzQjtRQUh4QixvQkFBZSxHQUE4QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2hFLGdCQUFXLEdBQThCLElBQUksWUFBWSxFQUFFLENBQUM7UUFHcEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDO0lBQzFDLENBQUM7SUFwQ0QsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsSUFBYSxTQUFTLENBQUMsS0FBSztRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO0lBQy9CLENBQUM7SUFDRCxJQUFhLFFBQVEsQ0FBQyxLQUFtQjtRQUN2QyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUN0RCxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDN0IsQ0FBQztJQUNELElBQWEsTUFBTSxDQUFDLEtBQW1CO1FBQ3JDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3BELENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBSztRQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFLO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBQUEsQ0FBQzs7d0hBaENTLDJCQUEyQjs0R0FBM0IsMkJBQTJCOzJGQUEzQiwyQkFBMkI7a0JBRHZDLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUU7aUdBT2hDLFNBQVM7c0JBQXJCLEtBQUs7Z0JBTU8sUUFBUTtzQkFBcEIsS0FBSztnQkFNTyxNQUFNO3NCQUFsQixLQUFLO2dCQU1PLElBQUk7c0JBQWhCLEtBQUs7Z0JBTU8sWUFBWTtzQkFBeEIsS0FBSztnQkFJSSxlQUFlO3NCQUF4QixNQUFNO2dCQUNHLFdBQVc7c0JBQXBCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjIgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiAsIElucHV0ICAsIE91dHB1dCwgRXZlbnRFbWl0dGVyICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2RzSW50ZXJuYWxPdmVybGF5IH0gZnJvbSAnQGNkcy9jb3JlL2ludGVybmFsLWNvbXBvbmVudHMvb3ZlcmxheSc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ2Nkcy1pbnRlcm5hbC1vdmVybGF5JyB9KVxuZXhwb3J0IGNsYXNzIENkc0ludGVybmFsT3ZlcmxheURpcmVjdGl2ZSB7XG4gIHByb3RlY3RlZCBlbGVtZW50OiBDZHNJbnRlcm5hbE92ZXJsYXk7XG5cbiAgZ2V0IGNkc01vdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNkc01vdGlvbjtcbiAgfVxuICBASW5wdXQoKSBzZXQgY2RzTW90aW9uKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmNkc01vdGlvbiA9IHZhbHVlO1xuICB9O1xuICBnZXQgY2xvc2FibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5jbG9zYWJsZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgY2xvc2FibGUodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5jbG9zYWJsZSA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGhpZGRlbigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmhpZGRlbjtcbiAgfVxuICBASW5wdXQoKSBzZXQgaGlkZGVuKHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICB9O1xuICBnZXQgaTE4bigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmkxOG47XG4gIH1cbiAgQElucHV0KCkgc2V0IGkxOG4odmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQuaTE4biA9IHZhbHVlO1xuICB9O1xuICBnZXQgY2xvc2VPdmVybGF5KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2xvc2VPdmVybGF5O1xuICB9XG4gIEBJbnB1dCgpIHNldCBjbG9zZU92ZXJsYXkodmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQuY2xvc2VPdmVybGF5ID0gdmFsdWU7XG4gIH07XG5cbiAgQE91dHB1dCgpIGNkc01vdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPEN1c3RvbUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGNsb3NlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q3VzdG9tRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gIH1cbn1cbiJdfQ==