/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsInternalPointerDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get axisAlign() {
        return this.element.axisAlign;
    }
    set axisAlign(value) {
        this.element.axisAlign = value;
    }
    ;
    get type() {
        return this.element.type;
    }
    set type(value) {
        this.element.type = value;
    }
    ;
}
CdsInternalPointerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsInternalPointerDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsInternalPointerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsInternalPointerDirective, selector: "cds-internal-pointer", inputs: { axisAlign: "axisAlign", type: "type" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsInternalPointerDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-internal-pointer' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { axisAlign: [{
                type: Input
            }], type: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWludGVybmFsLXBvaW50ZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvaW50ZXJuYWwtY29tcG9uZW50cy9wb3B1cC9jZHMtaW50ZXJuYWwtcG9pbnRlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sZUFBZSxDQUFDOztBQUloRSxNQUFNLE9BQU8sMkJBQTJCO0lBaUJ0QyxZQUFZLFVBQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBaEJELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQWEsU0FBUyxDQUFDLEtBQUs7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBSztRQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUFBLENBQUM7O3dIQWRTLDJCQUEyQjs0R0FBM0IsMkJBQTJCOzJGQUEzQiwyQkFBMkI7a0JBRHZDLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUU7aUdBT2hDLFNBQVM7c0JBQXJCLEtBQUs7Z0JBTU8sSUFBSTtzQkFBaEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMiBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmICwgSW5wdXQgICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2RzSW50ZXJuYWxQb2ludGVyIH0gZnJvbSAnQGNkcy9jb3JlL2ludGVybmFsLWNvbXBvbmVudHMvcG9wdXAnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjZHMtaW50ZXJuYWwtcG9pbnRlcicgfSlcbmV4cG9ydCBjbGFzcyBDZHNJbnRlcm5hbFBvaW50ZXJEaXJlY3RpdmUge1xuICBwcm90ZWN0ZWQgZWxlbWVudDogQ2RzSW50ZXJuYWxQb2ludGVyO1xuXG4gIGdldCBheGlzQWxpZ24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5heGlzQWxpZ247XG4gIH1cbiAgQElucHV0KCkgc2V0IGF4aXNBbGlnbih2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5heGlzQWxpZ24gPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC50eXBlO1xuICB9XG4gIEBJbnB1dCgpIHNldCB0eXBlKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnR5cGUgPSB2YWx1ZTtcbiAgfTtcblxuXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gIH1cbn1cbiJdfQ==