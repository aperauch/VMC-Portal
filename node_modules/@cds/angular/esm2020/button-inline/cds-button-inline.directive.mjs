/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsButtonInlineDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get pressed() {
        return this.element.pressed;
    }
    set pressed(value) {
        this.element.pressed = value === '' ? true : value;
    }
    ;
    get expanded() {
        return this.element.expanded;
    }
    set expanded(value) {
        this.element.expanded = value === '' ? true : value;
    }
    ;
    get readonly() {
        return this.element.readonly;
    }
    set readonly(value) {
        this.element.readonly = value === '' ? true : value;
    }
    ;
    get type() {
        return this.element.type;
    }
    set type(value) {
        this.element.type = value;
    }
    ;
    get name() {
        return this.element.name;
    }
    set name(value) {
        this.element.name = value;
    }
    ;
    get value() {
        return this.element.value;
    }
    set value(value) {
        this.element.value = value;
    }
    ;
    get disabled() {
        return this.element.disabled;
    }
    set disabled(value) {
        this.element.disabled = value === '' ? true : value;
    }
    ;
    get popup() {
        return this.element.popup;
    }
    set popup(value) {
        this.element.popup = value;
    }
    ;
}
CdsButtonInlineDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonInlineDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsButtonInlineDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsButtonInlineDirective, selector: "cds-button-inline", inputs: { pressed: "pressed", expanded: "expanded", readonly: "readonly", type: "type", name: "name", value: "value", disabled: "disabled", popup: "popup" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonInlineDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-button-inline' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { pressed: [{
                type: Input
            }], expanded: [{
                type: Input
            }], readonly: [{
                type: Input
            }], type: [{
                type: Input
            }], name: [{
                type: Input
            }], value: [{
                type: Input
            }], disabled: [{
                type: Input
            }], popup: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWJ1dHRvbi1pbmxpbmUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvYnV0dG9uLWlubGluZS9jZHMtYnV0dG9uLWlubGluZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sZUFBZSxDQUFDOztBQUloRSxNQUFNLE9BQU8sd0JBQXdCO0lBcURuQyxZQUFZLFVBQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBcERELElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQWEsT0FBTyxDQUFDLEtBQW1CO1FBQ3RDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3JELENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUMvQixDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBbUI7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDdEQsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO0lBQy9CLENBQUM7SUFDRCxJQUFhLFFBQVEsQ0FBQyxLQUFtQjtRQUN2QyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUN0RCxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUNELElBQWEsSUFBSSxDQUFDLEtBQUs7UUFDckIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBSztRQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFhLEtBQUssQ0FBQyxLQUFLO1FBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDL0IsQ0FBQztJQUNELElBQWEsUUFBUSxDQUFDLEtBQW1CO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBQ0QsSUFBYSxLQUFLLENBQUMsS0FBSztRQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDN0IsQ0FBQztJQUFBLENBQUM7O3FIQWxEUyx3QkFBd0I7eUdBQXhCLHdCQUF3QjsyRkFBeEIsd0JBQXdCO2tCQURwQyxTQUFTO21CQUFDLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFFO2lHQU83QixPQUFPO3NCQUFuQixLQUFLO2dCQU1PLFFBQVE7c0JBQXBCLEtBQUs7Z0JBTU8sUUFBUTtzQkFBcEIsS0FBSztnQkFNTyxJQUFJO3NCQUFoQixLQUFLO2dCQU1PLElBQUk7c0JBQWhCLEtBQUs7Z0JBTU8sS0FBSztzQkFBakIsS0FBSztnQkFNTyxRQUFRO3NCQUFwQixLQUFLO2dCQU1PLEtBQUs7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjIgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiAsIElucHV0ICAgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENkc0J1dHRvbklubGluZSB9IGZyb20gJ0BjZHMvY29yZS9idXR0b24taW5saW5lJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2RzLWJ1dHRvbi1pbmxpbmUnIH0pXG5leHBvcnQgY2xhc3MgQ2RzQnV0dG9uSW5saW5lRGlyZWN0aXZlIHtcbiAgcHJvdGVjdGVkIGVsZW1lbnQ6IENkc0J1dHRvbklubGluZTtcblxuICBnZXQgcHJlc3NlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnByZXNzZWQ7XG4gIH1cbiAgQElucHV0KCkgc2V0IHByZXNzZWQodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5wcmVzc2VkID0gdmFsdWUgPT09ICcnID8gdHJ1ZSA6IHZhbHVlO1xuICB9O1xuICBnZXQgZXhwYW5kZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5leHBhbmRlZDtcbiAgfVxuICBASW5wdXQoKSBzZXQgZXhwYW5kZWQodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5leHBhbmRlZCA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHJlYWRvbmx5KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQucmVhZG9ubHk7XG4gIH1cbiAgQElucHV0KCkgc2V0IHJlYWRvbmx5KHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmVsZW1lbnQucmVhZG9ubHkgPSB2YWx1ZSA9PT0gJycgPyB0cnVlIDogdmFsdWU7XG4gIH07XG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQudHlwZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgdHlwZSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC50eXBlID0gdmFsdWU7XG4gIH07XG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQubmFtZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgbmFtZSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5uYW1lID0gdmFsdWU7XG4gIH07XG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnZhbHVlO1xuICB9XG4gIEBJbnB1dCgpIHNldCB2YWx1ZSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC52YWx1ZSA9IHZhbHVlO1xuICB9O1xuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5kaXNhYmxlZDtcbiAgfVxuICBASW5wdXQoKSBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5kaXNhYmxlZCA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHBvcHVwKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQucG9wdXA7XG4gIH1cbiAgQElucHV0KCkgc2V0IHBvcHVwKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnBvcHVwID0gdmFsdWU7XG4gIH07XG5cblxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICB9XG59XG4iXX0=