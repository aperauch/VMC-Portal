/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsIconDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get shape() {
        return this.element.shape;
    }
    set shape(value) {
        this.element.shape = value;
    }
    ;
    get size() {
        return this.element.size;
    }
    set size(value) {
        this.element.size = value;
    }
    ;
    get direction() {
        return this.element.direction;
    }
    set direction(value) {
        this.element.direction = value;
    }
    ;
    get flip() {
        return this.element.flip;
    }
    set flip(value) {
        this.element.flip = value;
    }
    ;
    get solid() {
        return this.element.solid;
    }
    set solid(value) {
        this.element.solid = value === '' ? true : value;
    }
    ;
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
    get inverse() {
        return this.element.inverse;
    }
    set inverse(value) {
        this.element.inverse = value === '' ? true : value;
    }
    ;
    get badge() {
        return this.element.badge;
    }
    set badge(value) {
        this.element.badge = value;
    }
    ;
}
CdsIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsIconDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsIconDirective, selector: "cds-icon", inputs: { shape: "shape", size: "size", direction: "direction", flip: "flip", solid: "solid", status: "status", inverse: "inverse", badge: "badge" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsIconDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-icon' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { shape: [{
                type: Input
            }], size: [{
                type: Input
            }], direction: [{
                type: Input
            }], flip: [{
                type: Input
            }], solid: [{
                type: Input
            }], status: [{
                type: Input
            }], inverse: [{
                type: Input
            }], badge: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLWljb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2RzLWFuZ3VsYXIvaWNvbi9jZHMtaWNvbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sZUFBZSxDQUFDOztBQUloRSxNQUFNLE9BQU8sZ0JBQWdCO0lBcUQzQixZQUFZLFVBQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBcERELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUNELElBQWEsS0FBSyxDQUFDLEtBQUs7UUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBYSxJQUFJLENBQUMsS0FBSztRQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFDRCxJQUFhLFNBQVMsQ0FBQyxLQUFLO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUNELElBQWEsSUFBSSxDQUFDLEtBQUs7UUFDckIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBQ0QsSUFBYSxLQUFLLENBQUMsS0FBbUI7UUFDcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDbkQsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQzdCLENBQUM7SUFDRCxJQUFhLE1BQU0sQ0FBQyxLQUFLO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQWEsT0FBTyxDQUFDLEtBQW1CO1FBQ3RDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3JELENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBQ0QsSUFBYSxLQUFLLENBQUMsS0FBSztRQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDN0IsQ0FBQztJQUFBLENBQUM7OzZHQWxEUyxnQkFBZ0I7aUdBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUQ1QixTQUFTO21CQUFDLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRTtpR0FPcEIsS0FBSztzQkFBakIsS0FBSztnQkFNTyxJQUFJO3NCQUFoQixLQUFLO2dCQU1PLFNBQVM7c0JBQXJCLEtBQUs7Z0JBTU8sSUFBSTtzQkFBaEIsS0FBSztnQkFNTyxLQUFLO3NCQUFqQixLQUFLO2dCQU1PLE1BQU07c0JBQWxCLEtBQUs7Z0JBTU8sT0FBTztzQkFBbkIsS0FBSztnQkFNTyxLQUFLO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIyIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgLCBJbnB1dCAgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZHNJY29uIH0gZnJvbSAnQGNkcy9jb3JlL2ljb24nO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjZHMtaWNvbicgfSlcbmV4cG9ydCBjbGFzcyBDZHNJY29uRGlyZWN0aXZlIHtcbiAgcHJvdGVjdGVkIGVsZW1lbnQ6IENkc0ljb247XG5cbiAgZ2V0IHNoYXBlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2hhcGU7XG4gIH1cbiAgQElucHV0KCkgc2V0IHNoYXBlKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LnNoYXBlID0gdmFsdWU7XG4gIH07XG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2l6ZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgc2l6ZSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5zaXplID0gdmFsdWU7XG4gIH07XG4gIGdldCBkaXJlY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5kaXJlY3Rpb247XG4gIH1cbiAgQElucHV0KCkgc2V0IGRpcmVjdGlvbih2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5kaXJlY3Rpb24gPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGZsaXAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5mbGlwO1xuICB9XG4gIEBJbnB1dCgpIHNldCBmbGlwKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmZsaXAgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IHNvbGlkKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc29saWQ7XG4gIH1cbiAgQElucHV0KCkgc2V0IHNvbGlkKHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmVsZW1lbnQuc29saWQgPSB2YWx1ZSA9PT0gJycgPyB0cnVlIDogdmFsdWU7XG4gIH07XG4gIGdldCBzdGF0dXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdGF0dXM7XG4gIH1cbiAgQElucHV0KCkgc2V0IHN0YXR1cyh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5zdGF0dXMgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGludmVyc2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5pbnZlcnNlO1xuICB9XG4gIEBJbnB1dCgpIHNldCBpbnZlcnNlKHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmVsZW1lbnQuaW52ZXJzZSA9IHZhbHVlID09PSAnJyA/IHRydWUgOiB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGJhZGdlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuYmFkZ2U7XG4gIH1cbiAgQElucHV0KCkgc2V0IGJhZGdlKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmJhZGdlID0gdmFsdWU7XG4gIH07XG5cblxuICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICB9XG59XG4iXX0=