/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export class CdsModalDirective {
    constructor(elementRef) {
        this.cdsMotionChange = new EventEmitter();
        this.closeChange = new EventEmitter();
        this.element = elementRef.nativeElement;
    }
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
    get closable() {
        return this.element.closable;
    }
    set closable(value) {
        this.element.closable = value === '' ? true : value;
    }
    ;
    get size() {
        return this.element.size;
    }
    set size(value) {
        this.element.size = value;
    }
    ;
    get content() {
        return this.element.content;
    }
    set content(value) {
        this.element.content = value;
    }
    ;
    get modalHeader() {
        return this.element.modalHeader;
    }
    set modalHeader(value) {
        this.element.modalHeader = value;
    }
    ;
    get modalFooter() {
        return this.element.modalFooter;
    }
    set modalFooter(value) {
        this.element.modalFooter = value;
    }
    ;
    get cdsMotion() {
        return this.element.cdsMotion;
    }
    set cdsMotion(value) {
        this.element.cdsMotion = value;
    }
    ;
    get hidden() {
        return this.element.hidden;
    }
    set hidden(value) {
        this.element.hidden = value === '' ? true : value;
    }
    ;
    get closeOverlay() {
        return this.element.closeOverlay;
    }
    set closeOverlay(value) {
        this.element.closeOverlay = value;
    }
    ;
}
CdsModalDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsModalDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsModalDirective, selector: "cds-modal", inputs: { i18n: "i18n", closable: "closable", size: "size", content: "content", modalHeader: "modalHeader", modalFooter: "modalFooter", cdsMotion: "cdsMotion", hidden: "hidden", closeOverlay: "closeOverlay" }, outputs: { cdsMotionChange: "cdsMotionChange", closeChange: "closeChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-modal' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{
                type: Input
            }], closable: [{
                type: Input
            }], size: [{
                type: Input
            }], content: [{
                type: Input
            }], modalHeader: [{
                type: Input
            }], modalFooter: [{
                type: Input
            }], cdsMotion: [{
                type: Input
            }], hidden: [{
                type: Input
            }], closeOverlay: [{
                type: Input
            }], cdsMotionChange: [{
                type: Output
            }], closeChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RzLW1vZGFsLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkcy1hbmd1bGFyL21vZGFsL2Nkcy1tb2RhbC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQWUsS0FBSyxFQUFJLE1BQU0sRUFBRSxZQUFZLEVBQUcsTUFBTSxlQUFlLENBQUM7O0FBSXZGLE1BQU0sT0FBTyxpQkFBaUI7SUE2RDVCLFlBQVksVUFBc0I7UUFIeEIsb0JBQWUsR0FBOEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNoRSxnQkFBVyxHQUE4QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBR3BFLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQztJQUMxQyxDQUFDO0lBNURELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUNELElBQWEsSUFBSSxDQUFDLEtBQUs7UUFDckIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUMvQixDQUFDO0lBQ0QsSUFBYSxRQUFRLENBQUMsS0FBbUI7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDdEQsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFDRCxJQUFhLElBQUksQ0FBQyxLQUFLO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7SUFDOUIsQ0FBQztJQUNELElBQWEsT0FBTyxDQUFDLEtBQUs7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsSUFBYSxXQUFXLENBQUMsS0FBSztRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO0lBQ2xDLENBQUM7SUFDRCxJQUFhLFdBQVcsQ0FBQyxLQUFLO1FBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUNuQyxDQUFDO0lBQUEsQ0FBQztJQUNGLElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQWEsU0FBUyxDQUFDLEtBQUs7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFBQSxDQUFDO0lBQ0YsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBYSxNQUFNLENBQUMsS0FBbUI7UUFDckMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDcEQsQ0FBQztJQUFBLENBQUM7SUFDRixJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxLQUFLO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBQUEsQ0FBQzs7OEdBeERTLGlCQUFpQjtrR0FBakIsaUJBQWlCOzJGQUFqQixpQkFBaUI7a0JBRDdCLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFO2lHQU9yQixJQUFJO3NCQUFoQixLQUFLO2dCQU1PLFFBQVE7c0JBQXBCLEtBQUs7Z0JBTU8sSUFBSTtzQkFBaEIsS0FBSztnQkFNTyxPQUFPO3NCQUFuQixLQUFLO2dCQU1PLFdBQVc7c0JBQXZCLEtBQUs7Z0JBTU8sV0FBVztzQkFBdkIsS0FBSztnQkFNTyxTQUFTO3NCQUFyQixLQUFLO2dCQU1PLE1BQU07c0JBQWxCLEtBQUs7Z0JBTU8sWUFBWTtzQkFBeEIsS0FBSztnQkFJSSxlQUFlO3NCQUF4QixNQUFNO2dCQUNHLFdBQVc7c0JBQXBCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjIgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiAsIElucHV0ICAsIE91dHB1dCwgRXZlbnRFbWl0dGVyICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2RzTW9kYWwgfSBmcm9tICdAY2RzL2NvcmUvbW9kYWwnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjZHMtbW9kYWwnIH0pXG5leHBvcnQgY2xhc3MgQ2RzTW9kYWxEaXJlY3RpdmUge1xuICBwcm90ZWN0ZWQgZWxlbWVudDogQ2RzTW9kYWw7XG5cbiAgZ2V0IGkxOG4oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5pMThuO1xuICB9XG4gIEBJbnB1dCgpIHNldCBpMThuKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmkxOG4gPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGNsb3NhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY2xvc2FibGU7XG4gIH1cbiAgQElucHV0KCkgc2V0IGNsb3NhYmxlKHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmVsZW1lbnQuY2xvc2FibGUgPSB2YWx1ZSA9PT0gJycgPyB0cnVlIDogdmFsdWU7XG4gIH07XG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2l6ZTtcbiAgfVxuICBASW5wdXQoKSBzZXQgc2l6ZSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5zaXplID0gdmFsdWU7XG4gIH07XG4gIGdldCBjb250ZW50KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY29udGVudDtcbiAgfVxuICBASW5wdXQoKSBzZXQgY29udGVudCh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5jb250ZW50ID0gdmFsdWU7XG4gIH07XG4gIGdldCBtb2RhbEhlYWRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50Lm1vZGFsSGVhZGVyO1xuICB9XG4gIEBJbnB1dCgpIHNldCBtb2RhbEhlYWRlcih2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5tb2RhbEhlYWRlciA9IHZhbHVlO1xuICB9O1xuICBnZXQgbW9kYWxGb290ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5tb2RhbEZvb3RlcjtcbiAgfVxuICBASW5wdXQoKSBzZXQgbW9kYWxGb290ZXIodmFsdWUpIHtcbiAgICB0aGlzLmVsZW1lbnQubW9kYWxGb290ZXIgPSB2YWx1ZTtcbiAgfTtcbiAgZ2V0IGNkc01vdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LmNkc01vdGlvbjtcbiAgfVxuICBASW5wdXQoKSBzZXQgY2RzTW90aW9uKHZhbHVlKSB7XG4gICAgdGhpcy5lbGVtZW50LmNkc01vdGlvbiA9IHZhbHVlO1xuICB9O1xuICBnZXQgaGlkZGVuKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuaGlkZGVuO1xuICB9XG4gIEBJbnB1dCgpIHNldCBoaWRkZW4odmFsdWU6IGJvb2xlYW4gfCAnJykge1xuICAgIHRoaXMuZWxlbWVudC5oaWRkZW4gPSB2YWx1ZSA9PT0gJycgPyB0cnVlIDogdmFsdWU7XG4gIH07XG4gIGdldCBjbG9zZU92ZXJsYXkoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5jbG9zZU92ZXJsYXk7XG4gIH1cbiAgQElucHV0KCkgc2V0IGNsb3NlT3ZlcmxheSh2YWx1ZSkge1xuICAgIHRoaXMuZWxlbWVudC5jbG9zZU92ZXJsYXkgPSB2YWx1ZTtcbiAgfTtcblxuICBAT3V0cHV0KCkgY2RzTW90aW9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q3VzdG9tRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgY2xvc2VDaGFuZ2U6IEV2ZW50RW1pdHRlcjxDdXN0b21FdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgfVxufVxuIl19