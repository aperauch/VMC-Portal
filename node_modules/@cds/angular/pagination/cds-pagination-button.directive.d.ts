import { ElementRef } from '@angular/core';
import { CdsPaginationButton } from '@cds/core/pagination';
import * as i0 from "@angular/core";
export declare class CdsPaginationButtonDirective {
    protected element: CdsPaginationButton;
    get action(): "next" | "prev" | "first" | "last";
    set action(value: "next" | "prev" | "first" | "last");
    get disabled(): boolean | '';
    set disabled(value: boolean | '');
    get shape(): string;
    set shape(value: string);
    get iconSize(): string;
    set iconSize(value: string);
    get i18n(): {
        sort: string;
        expand: string;
        close: string;
        resize: string;
        filter: string;
    };
    set i18n(value: {
        sort: string;
        expand: string;
        close: string;
        resize: string;
        filter: string;
    });
    get pressed(): boolean | '';
    set pressed(value: boolean | '');
    get expanded(): boolean | '';
    set expanded(value: boolean | '');
    get readonly(): boolean | '';
    set readonly(value: boolean | '');
    get type(): "button" | "submit";
    set type(value: "button" | "submit");
    get name(): string;
    set name(value: string);
    get value(): string;
    set value(value: string);
    get popup(): string;
    set popup(value: string);
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsPaginationButtonDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsPaginationButtonDirective, "cds-pagination-button", never, { "action": "action"; "disabled": "disabled"; "shape": "shape"; "iconSize": "iconSize"; "i18n": "i18n"; "pressed": "pressed"; "expanded": "expanded"; "readonly": "readonly"; "type": "type"; "name": "name"; "value": "value"; "popup": "popup"; }, {}, never>;
}
