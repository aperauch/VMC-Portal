import { ElementRef, EventEmitter } from '@angular/core';
import { CdsTreeItem } from '@cds/core/tree-view';
import * as i0 from "@angular/core";
export declare class CdsTreeItemDirective {
    protected element: CdsTreeItem;
    get i18n(): {
        loading: string;
    };
    set i18n(value: {
        loading: string;
    });
    get cdsMotion(): string;
    set cdsMotion(value: string);
    get multiSelect(): boolean | '';
    set multiSelect(value: boolean | '');
    get disabled(): boolean | '';
    set disabled(value: boolean | '');
    get expanded(): boolean | '';
    set expanded(value: boolean | '');
    get expandable(): boolean | '';
    set expandable(value: boolean | '');
    get indeterminate(): boolean | '';
    set indeterminate(value: boolean | '');
    get loading(): boolean | '';
    set loading(value: boolean | '');
    get selected(): boolean | '';
    set selected(value: boolean | '');
    get toggleExpanded(): () => void;
    set toggleExpanded(value: () => void);
    get toggleSelected(): () => void;
    set toggleSelected(value: () => void);
    cdsMotionChange: EventEmitter<CustomEvent>;
    expandedChange: EventEmitter<CustomEvent>;
    selectedChange: EventEmitter<CustomEvent>;
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsTreeItemDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsTreeItemDirective, "cds-tree-item", never, { "i18n": "i18n"; "cdsMotion": "cdsMotion"; "multiSelect": "multiSelect"; "disabled": "disabled"; "expanded": "expanded"; "expandable": "expandable"; "indeterminate": "indeterminate"; "loading": "loading"; "selected": "selected"; "toggleExpanded": "toggleExpanded"; "toggleSelected": "toggleSelected"; }, { "cdsMotionChange": "cdsMotionChange"; "expandedChange": "expandedChange"; "selectedChange": "selectedChange"; }, never>;
}
