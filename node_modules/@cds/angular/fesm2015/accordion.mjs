import * as i0 from '@angular/core';
import { Directive, EventEmitter, Input, Output, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import '@cds/core/accordion/register.js';

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAccordionDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsAccordionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsAccordionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsAccordionDirective, selector: "cds-accordion", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-accordion' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAccordionPanelDirective {
    constructor(elementRef) {
        this.cdsMotionChange = new EventEmitter();
        this.expandedChange = new EventEmitter();
        this.element = elementRef.nativeElement;
    }
    get cdsMotion() {
        return this.element.cdsMotion;
    }
    set cdsMotion(value) {
        this.element.cdsMotion = value;
    }
    ;
    get disabled() {
        return this.element.disabled;
    }
    set disabled(value) {
        this.element.disabled = value === '' ? true : value;
    }
    ;
    get expanded() {
        return this.element.expanded;
    }
    set expanded(value) {
        this.element.expanded = value === '' ? true : value;
    }
    ;
}
CdsAccordionPanelDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionPanelDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsAccordionPanelDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsAccordionPanelDirective, selector: "cds-accordion-panel", inputs: { cdsMotion: "cdsMotion", disabled: "disabled", expanded: "expanded" }, outputs: { cdsMotionChange: "cdsMotionChange", expandedChange: "expandedChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionPanelDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-accordion-panel' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{
                type: Input
            }], disabled: [{
                type: Input
            }], expanded: [{
                type: Input
            }], cdsMotionChange: [{
                type: Output
            }], expandedChange: [{
                type: Output
            }] } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAccordionContentDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsAccordionContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionContentDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsAccordionContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsAccordionContentDirective, selector: "cds-accordion-content", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionContentDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-accordion-content' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAccordionHeaderDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsAccordionHeaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionHeaderDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsAccordionHeaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsAccordionHeaderDirective, selector: "cds-accordion-header", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionHeaderDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-accordion-header' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAccordionModule {
}
CdsAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CdsAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionModule, declarations: [CdsAccordionDirective,
        CdsAccordionPanelDirective,
        CdsAccordionContentDirective,
        CdsAccordionHeaderDirective], imports: [CommonModule], exports: [CdsAccordionDirective,
        CdsAccordionPanelDirective,
        CdsAccordionContentDirective,
        CdsAccordionHeaderDirective] });
CdsAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAccordionModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        CdsAccordionDirective,
                        CdsAccordionPanelDirective,
                        CdsAccordionContentDirective,
                        CdsAccordionHeaderDirective,
                    ],
                    exports: [
                        CdsAccordionDirective,
                        CdsAccordionPanelDirective,
                        CdsAccordionContentDirective,
                        CdsAccordionHeaderDirective,
                    ],
                }]
        }] });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { CdsAccordionContentDirective, CdsAccordionDirective, CdsAccordionHeaderDirective, CdsAccordionModule, CdsAccordionPanelDirective };
//# sourceMappingURL=accordion.mjs.map
