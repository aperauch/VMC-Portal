import * as i0 from '@angular/core';
import { Directive, EventEmitter, Input, Output, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import '@cds/core/modal/register.js';

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsModalHeaderDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsModalHeaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalHeaderDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsModalHeaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsModalHeaderDirective, selector: "cds-modal-header", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalHeaderDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-modal-header' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsModalHeaderActionsDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsModalHeaderActionsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalHeaderActionsDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsModalHeaderActionsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsModalHeaderActionsDirective, selector: "cds-modal-header-actions", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalHeaderActionsDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-modal-header-actions' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsModalContentDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsModalContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalContentDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsModalContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsModalContentDirective, selector: "cds-modal-content", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalContentDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-modal-content' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsModalActionsDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsModalActionsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalActionsDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsModalActionsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsModalActionsDirective, selector: "cds-modal-actions", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalActionsDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-modal-actions' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsModalDirective {
    constructor(elementRef) {
        this.cdsMotionChange = new EventEmitter();
        this.closeChange = new EventEmitter();
        this.element = elementRef.nativeElement;
    }
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
    get closable() {
        return this.element.closable;
    }
    set closable(value) {
        this.element.closable = value === '' ? true : value;
    }
    ;
    get size() {
        return this.element.size;
    }
    set size(value) {
        this.element.size = value;
    }
    ;
    get content() {
        return this.element.content;
    }
    set content(value) {
        this.element.content = value;
    }
    ;
    get modalHeader() {
        return this.element.modalHeader;
    }
    set modalHeader(value) {
        this.element.modalHeader = value;
    }
    ;
    get modalFooter() {
        return this.element.modalFooter;
    }
    set modalFooter(value) {
        this.element.modalFooter = value;
    }
    ;
    get cdsMotion() {
        return this.element.cdsMotion;
    }
    set cdsMotion(value) {
        this.element.cdsMotion = value;
    }
    ;
    get hidden() {
        return this.element.hidden;
    }
    set hidden(value) {
        this.element.hidden = value === '' ? true : value;
    }
    ;
    get closeOverlay() {
        return this.element.closeOverlay;
    }
    set closeOverlay(value) {
        this.element.closeOverlay = value;
    }
    ;
}
CdsModalDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsModalDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsModalDirective, selector: "cds-modal", inputs: { i18n: "i18n", closable: "closable", size: "size", content: "content", modalHeader: "modalHeader", modalFooter: "modalFooter", cdsMotion: "cdsMotion", hidden: "hidden", closeOverlay: "closeOverlay" }, outputs: { cdsMotionChange: "cdsMotionChange", closeChange: "closeChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-modal' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{
                type: Input
            }], closable: [{
                type: Input
            }], size: [{
                type: Input
            }], content: [{
                type: Input
            }], modalHeader: [{
                type: Input
            }], modalFooter: [{
                type: Input
            }], cdsMotion: [{
                type: Input
            }], hidden: [{
                type: Input
            }], closeOverlay: [{
                type: Input
            }], cdsMotionChange: [{
                type: Output
            }], closeChange: [{
                type: Output
            }] } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsModalModule {
}
CdsModalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CdsModalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalModule, declarations: [CdsModalHeaderDirective,
        CdsModalHeaderActionsDirective,
        CdsModalContentDirective,
        CdsModalActionsDirective,
        CdsModalDirective], imports: [CommonModule], exports: [CdsModalHeaderDirective,
        CdsModalHeaderActionsDirective,
        CdsModalContentDirective,
        CdsModalActionsDirective,
        CdsModalDirective] });
CdsModalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsModalModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        CdsModalHeaderDirective,
                        CdsModalHeaderActionsDirective,
                        CdsModalContentDirective,
                        CdsModalActionsDirective,
                        CdsModalDirective,
                    ],
                    exports: [
                        CdsModalHeaderDirective,
                        CdsModalHeaderActionsDirective,
                        CdsModalContentDirective,
                        CdsModalActionsDirective,
                        CdsModalDirective,
                    ],
                }]
        }] });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { CdsModalActionsDirective, CdsModalContentDirective, CdsModalDirective, CdsModalHeaderActionsDirective, CdsModalHeaderDirective, CdsModalModule };
//# sourceMappingURL=modal.mjs.map
