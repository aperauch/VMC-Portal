import * as i0 from '@angular/core';
import { Directive, EventEmitter, Input, Output, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import '@cds/core/alert/register.js';

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAlertActionsDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
}
CdsAlertActionsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertActionsDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsAlertActionsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsAlertActionsDirective, selector: "cds-alert-actions", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertActionsDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-alert-actions' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAlertDirective {
    constructor(elementRef) {
        this.closeChange = new EventEmitter();
        this.element = elementRef.nativeElement;
    }
    get size() {
        return this.element.size;
    }
    set size(value) {
        this.element.size = value;
    }
    ;
    get closable() {
        return this.element.closable;
    }
    set closable(value) {
        this.element.closable = value === '' ? true : value;
    }
    ;
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
}
CdsAlertDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsAlertDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsAlertDirective, selector: "cds-alert", inputs: { size: "size", closable: "closable", status: "status", i18n: "i18n" }, outputs: { closeChange: "closeChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-alert' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { size: [{
                type: Input
            }], closable: [{
                type: Input
            }], status: [{
                type: Input
            }], i18n: [{
                type: Input
            }], closeChange: [{
                type: Output
            }] } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAlertGroupDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get size() {
        return this.element.size;
    }
    set size(value) {
        this.element.size = value;
    }
    ;
    get type() {
        return this.element.type;
    }
    set type(value) {
        this.element.type = value;
    }
    ;
    get status() {
        return this.element.status;
    }
    set status(value) {
        this.element.status = value;
    }
    ;
}
CdsAlertGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsAlertGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsAlertGroupDirective, selector: "cds-alert-group", inputs: { size: "size", type: "type", status: "status" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertGroupDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-alert-group' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { size: [{
                type: Input
            }], type: [{
                type: Input
            }], status: [{
                type: Input
            }] } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsAlertModule {
}
CdsAlertModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CdsAlertModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertModule, declarations: [CdsAlertActionsDirective,
        CdsAlertDirective,
        CdsAlertGroupDirective], imports: [CommonModule], exports: [CdsAlertActionsDirective,
        CdsAlertDirective,
        CdsAlertGroupDirective] });
CdsAlertModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsAlertModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        CdsAlertActionsDirective,
                        CdsAlertDirective,
                        CdsAlertGroupDirective,
                    ],
                    exports: [
                        CdsAlertActionsDirective,
                        CdsAlertDirective,
                        CdsAlertGroupDirective,
                    ],
                }]
        }] });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { CdsAlertActionsDirective, CdsAlertDirective, CdsAlertGroupDirective, CdsAlertModule };
//# sourceMappingURL=alert.mjs.map
