import { ElementRef, EventEmitter } from '@angular/core';
import { CdsNavigation } from '@cds/core/navigation';
import * as i0 from "@angular/core";
export declare class CdsNavigationDirective {
    protected element: CdsNavigation;
    get expandedRoot(): boolean | '';
    set expandedRoot(value: boolean | '');
    get cdsMotion(): string;
    set cdsMotion(value: string);
    get expanded(): boolean | '';
    set expanded(value: boolean | '');
    get i18n(): {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    };
    set i18n(value: {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    });
    get onStartItemSlotChange(): () => void;
    set onStartItemSlotChange(value: () => void);
    get onItemSlotChange(): () => void;
    set onItemSlotChange(value: () => void);
    get updateChildrenProps(): () => void;
    set updateChildrenProps(value: () => void);
    cdsMotionChange: EventEmitter<CustomEvent>;
    expandedChange: EventEmitter<CustomEvent>;
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsNavigationDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsNavigationDirective, "cds-navigation", never, { "expandedRoot": "expandedRoot"; "cdsMotion": "cdsMotion"; "expanded": "expanded"; "i18n": "i18n"; "onStartItemSlotChange": "onStartItemSlotChange"; "onItemSlotChange": "onItemSlotChange"; "updateChildrenProps": "updateChildrenProps"; }, { "cdsMotionChange": "cdsMotionChange"; "expandedChange": "expandedChange"; }, never>;
}
