import { ElementRef } from '@angular/core';
import { CdsNavigationStart } from '@cds/core/navigation';
import * as i0 from "@angular/core";
export declare class CdsNavigationStartDirective {
    protected element: CdsNavigationStart;
    get i18n(): {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    };
    set i18n(value: {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    });
    get expandedRoot(): boolean | '';
    set expandedRoot(value: boolean | '');
    get hasFocus(): import("@cds/core/navigation/interfaces/navigation.interfaces").NavigationFocusState;
    set hasFocus(value: import("@cds/core/navigation/interfaces/navigation.interfaces").NavigationFocusState);
    get isGroupStart(): boolean | '';
    set isGroupStart(value: boolean | '');
    get navigationGroupId(): string;
    set navigationGroupId(value: string);
    get itemText(): NodeListOf<HTMLSpanElement>;
    set itemText(value: NodeListOf<HTMLSpanElement>);
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsNavigationStartDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsNavigationStartDirective, "cds-navigation-start", never, { "i18n": "i18n"; "expandedRoot": "expandedRoot"; "hasFocus": "hasFocus"; "isGroupStart": "isGroupStart"; "navigationGroupId": "navigationGroupId"; "itemText": "itemText"; }, {}, never>;
}
