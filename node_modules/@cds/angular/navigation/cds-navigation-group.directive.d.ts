import { ElementRef, EventEmitter } from '@angular/core';
import { CdsNavigationGroup } from '@cds/core/navigation';
import * as i0 from "@angular/core";
export declare class CdsNavigationGroupDirective {
    protected element: CdsNavigationGroup;
    get cdsMotion(): string;
    set cdsMotion(value: string);
    get i18n(): {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    };
    set i18n(value: {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    });
    get expanded(): boolean | '';
    set expanded(value: boolean | '');
    get active(): boolean | '';
    set active(value: boolean | '');
    get hasFocus(): boolean | '';
    set hasFocus(value: boolean | '');
    cdsMotionChange: EventEmitter<CustomEvent>;
    expandedChange: EventEmitter<CustomEvent>;
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsNavigationGroupDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsNavigationGroupDirective, "cds-navigation-group", never, { "cdsMotion": "cdsMotion"; "i18n": "i18n"; "expanded": "expanded"; "active": "active"; "hasFocus": "hasFocus"; }, { "cdsMotionChange": "cdsMotionChange"; "expandedChange": "expandedChange"; }, never>;
}
