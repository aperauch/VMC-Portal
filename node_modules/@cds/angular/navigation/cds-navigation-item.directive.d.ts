import { ElementRef } from '@angular/core';
import { CdsNavigationItem } from '@cds/core/navigation';
import * as i0 from "@angular/core";
export declare class CdsNavigationItemDirective {
    protected element: CdsNavigationItem;
    get i18n(): {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    };
    set i18n(value: {
        navigationElement: string;
        navigationLabel: string;
        navigationAbridgedText: string;
        navigationUnabridgedText: string;
    });
    get active(): boolean | '';
    set active(value: boolean | '');
    get disabled(): boolean | '';
    set disabled(value: boolean | '');
    get expanded(): boolean | '';
    set expanded(value: boolean | '');
    get groupItem(): boolean | '';
    set groupItem(value: boolean | '');
    get hasFocus(): import("@cds/core/navigation/interfaces/navigation.interfaces").NavigationFocusState;
    set hasFocus(value: import("@cds/core/navigation/interfaces/navigation.interfaces").NavigationFocusState);
    get focusElement(): HTMLElement;
    set focusElement(value: HTMLElement);
    get itemText(): NodeListOf<HTMLSpanElement>;
    set itemText(value: NodeListOf<HTMLSpanElement>);
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsNavigationItemDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsNavigationItemDirective, "cds-navigation-item", never, { "i18n": "i18n"; "active": "active"; "disabled": "disabled"; "expanded": "expanded"; "groupItem": "groupItem"; "hasFocus": "hasFocus"; "focusElement": "focusElement"; "itemText": "itemText"; }, {}, never>;
}
