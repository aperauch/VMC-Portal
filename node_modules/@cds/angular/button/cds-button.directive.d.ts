import { ElementRef } from '@angular/core';
import { CdsButton } from '@cds/core/button';
import * as i0 from "@angular/core";
export declare class CdsButtonDirective {
    protected element: CdsButton;
    get action(): "outline" | "solid" | "flat" | "flat-inline";
    set action(value: "outline" | "solid" | "flat" | "flat-inline");
    get status(): "inverse" | "success" | "warning" | "neutral" | "danger" | "primary";
    set status(value: "inverse" | "success" | "warning" | "neutral" | "danger" | "primary");
    get size(): "sm" | "md" | "icon";
    set size(value: "sm" | "md" | "icon");
    get block(): boolean | '';
    set block(value: boolean | '');
    get loadingState(): "error" | "default" | "loading" | "success";
    set loadingState(value: "error" | "default" | "loading" | "success");
    get disabled(): boolean | '';
    set disabled(value: boolean | '');
    get isDefaultLoadingState(): (state: string) => boolean;
    set isDefaultLoadingState(value: (state: string) => boolean);
    get pressed(): boolean | '';
    set pressed(value: boolean | '');
    get expanded(): boolean | '';
    set expanded(value: boolean | '');
    get readonly(): boolean | '';
    set readonly(value: boolean | '');
    get type(): "button" | "submit";
    set type(value: "button" | "submit");
    get name(): string;
    set name(value: string);
    get value(): string;
    set value(value: string);
    get popup(): string;
    set popup(value: string);
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsButtonDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsButtonDirective, "cds-button", never, { "action": "action"; "status": "status"; "size": "size"; "block": "block"; "loadingState": "loadingState"; "disabled": "disabled"; "isDefaultLoadingState": "isDefaultLoadingState"; "pressed": "pressed"; "expanded": "expanded"; "readonly": "readonly"; "type": "type"; "name": "name"; "value": "value"; "popup": "popup"; }, {}, never>;
}
