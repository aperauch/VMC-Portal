import { ElementRef, EventEmitter } from '@angular/core';
import { CdsInternalPopup } from '@cds/core/internal-components/popup';
import * as i0 from "@angular/core";
export declare class CdsInternalPopupDirective {
    protected element: CdsInternalPopup;
    get i18n(): {
        closeButtonAriaLabel: string;
        contentStart: string;
        contentEnd: string;
    };
    set i18n(value: {
        closeButtonAriaLabel: string;
        contentStart: string;
        contentEnd: string;
    });
    get cdsMotion(): string;
    set cdsMotion(value: string);
    get trigger(): HTMLElement;
    set trigger(value: HTMLElement);
    get anchor(): string | HTMLElement;
    set anchor(value: string | HTMLElement);
    get anchorAlign(): import("@cds/core/internal").AxisAligns;
    set anchorAlign(value: import("@cds/core/internal").AxisAligns);
    get mainAxisOffset(): number;
    set mainAxisOffset(value: number);
    get crossAxisOffset(): number;
    set crossAxisOffset(value: number);
    get orientation(): string;
    set orientation(value: string);
    get closable(): boolean | '';
    set closable(value: boolean | '');
    get pointerAlign(): import("@cds/core/internal").AxisAligns;
    set pointerAlign(value: import("@cds/core/internal").AxisAligns);
    get defaultPointerType(): string;
    set defaultPointerType(value: string);
    get pointer(): import("@cds/core/internal-components/popup").CdsInternalPointer;
    set pointer(value: import("@cds/core/internal-components/popup").CdsInternalPointer);
    get hidden(): boolean | '';
    set hidden(value: boolean | '');
    get closeOverlay(): (trigger?: import("@cds/core/internal").CloseChangeType) => void;
    set closeOverlay(value: (trigger?: import("@cds/core/internal").CloseChangeType) => void);
    cdsMotionChange: EventEmitter<CustomEvent>;
    closeChange: EventEmitter<CustomEvent>;
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsInternalPopupDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsInternalPopupDirective, "cds-internal-popup", never, { "i18n": "i18n"; "cdsMotion": "cdsMotion"; "trigger": "trigger"; "anchor": "anchor"; "anchorAlign": "anchorAlign"; "mainAxisOffset": "mainAxisOffset"; "crossAxisOffset": "crossAxisOffset"; "orientation": "orientation"; "closable": "closable"; "pointerAlign": "pointerAlign"; "defaultPointerType": "defaultPointerType"; "pointer": "pointer"; "hidden": "hidden"; "closeOverlay": "closeOverlay"; }, { "cdsMotionChange": "cdsMotionChange"; "closeChange": "closeChange"; }, never>;
}
