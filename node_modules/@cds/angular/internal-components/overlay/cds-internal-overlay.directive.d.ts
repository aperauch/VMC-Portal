import { ElementRef, EventEmitter } from '@angular/core';
import { CdsInternalOverlay } from '@cds/core/internal-components/overlay';
import * as i0 from "@angular/core";
export declare class CdsInternalOverlayDirective {
    protected element: CdsInternalOverlay;
    get cdsMotion(): string;
    set cdsMotion(value: string);
    get closable(): boolean | '';
    set closable(value: boolean | '');
    get hidden(): boolean | '';
    set hidden(value: boolean | '');
    get i18n(): {
        closeButtonAriaLabel: string;
        contentStart: string;
        contentEnd: string;
    };
    set i18n(value: {
        closeButtonAriaLabel: string;
        contentStart: string;
        contentEnd: string;
    });
    get closeOverlay(): (trigger?: import("@cds/core/internal").CloseChangeType) => void;
    set closeOverlay(value: (trigger?: import("@cds/core/internal").CloseChangeType) => void);
    cdsMotionChange: EventEmitter<CustomEvent>;
    closeChange: EventEmitter<CustomEvent>;
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<CdsInternalOverlayDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CdsInternalOverlayDirective, "cds-internal-overlay", never, { "cdsMotion": "cdsMotion"; "closable": "closable"; "hidden": "hidden"; "i18n": "i18n"; "closeOverlay": "closeOverlay"; }, { "cdsMotionChange": "cdsMotionChange"; "closeChange": "closeChange"; }, never>;
}
