import * as i0 from '@angular/core';
import { Directive, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import '@cds/core/button-expand/register.js';

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsButtonExpandDirective {
    constructor(elementRef) {
        this.element = elementRef.nativeElement;
    }
    get action() {
        return this.element.action;
    }
    set action(value) {
        this.element.action = value;
    }
    ;
    get expanded() {
        return this.element.expanded;
    }
    set expanded(value) {
        this.element.expanded = value === '' ? true : value;
    }
    ;
    get shape() {
        return this.element.shape;
    }
    set shape(value) {
        this.element.shape = value;
    }
    ;
    get iconSize() {
        return this.element.iconSize;
    }
    set iconSize(value) {
        this.element.iconSize = value;
    }
    ;
    get i18n() {
        return this.element.i18n;
    }
    set i18n(value) {
        this.element.i18n = value;
    }
    ;
    get pressed() {
        return this.element.pressed;
    }
    set pressed(value) {
        this.element.pressed = value === '' ? true : value;
    }
    ;
    get readonly() {
        return this.element.readonly;
    }
    set readonly(value) {
        this.element.readonly = value === '' ? true : value;
    }
    ;
    get type() {
        return this.element.type;
    }
    set type(value) {
        this.element.type = value;
    }
    ;
    get name() {
        return this.element.name;
    }
    set name(value) {
        this.element.name = value;
    }
    ;
    get value() {
        return this.element.value;
    }
    set value(value) {
        this.element.value = value;
    }
    ;
    get disabled() {
        return this.element.disabled;
    }
    set disabled(value) {
        this.element.disabled = value === '' ? true : value;
    }
    ;
    get popup() {
        return this.element.popup;
    }
    set popup(value) {
        this.element.popup = value;
    }
    ;
}
CdsButtonExpandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonExpandDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CdsButtonExpandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: CdsButtonExpandDirective, selector: "cds-button-expand", inputs: { action: "action", expanded: "expanded", shape: "shape", iconSize: "iconSize", i18n: "i18n", pressed: "pressed", readonly: "readonly", type: "type", name: "name", value: "value", disabled: "disabled", popup: "popup" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonExpandDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'cds-button-expand' }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { action: [{
                type: Input
            }], expanded: [{
                type: Input
            }], shape: [{
                type: Input
            }], iconSize: [{
                type: Input
            }], i18n: [{
                type: Input
            }], pressed: [{
                type: Input
            }], readonly: [{
                type: Input
            }], type: [{
                type: Input
            }], name: [{
                type: Input
            }], value: [{
                type: Input
            }], disabled: [{
                type: Input
            }], popup: [{
                type: Input
            }] } });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
class CdsButtonExpandModule {
}
CdsButtonExpandModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonExpandModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CdsButtonExpandModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonExpandModule, declarations: [CdsButtonExpandDirective], imports: [CommonModule], exports: [CdsButtonExpandDirective] });
CdsButtonExpandModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonExpandModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CdsButtonExpandModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        CdsButtonExpandDirective,
                    ],
                    exports: [
                        CdsButtonExpandDirective,
                    ],
                }]
        }] });

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/*
 * Copyright (c) 2016-2022 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { CdsButtonExpandDirective, CdsButtonExpandModule };
//# sourceMappingURL=button-expand.mjs.map
